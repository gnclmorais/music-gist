extends layout

block content
  .profile
    .section-media
      img(class='cover' src=image)

      .players
        ul(class='tabs')
          //- Show our preferred media players, only 1 active at a time
          each val, index in play
            li(class='#{index}')
              a(href='#' class='tab-#{index} fa fa-#{index}')
          //- Always load YouTube search (last playing resourt)
          li(class='youtube-search')
            a(href='#' class='tab-youtube fa fa-youtube-play')
        .tab-content
          if play.soundcloud
            .soundcloud
              iframe(id='iframe-soundcloud'
                     src='//w.soundcloud.com/player/?url=http://api.soundcloud.com')
          div(id='ytplayer' class='youtube video-container')
            iframe(id="ytplayer"
                   type="text/html"
                   width="720"
                   height="405"
                   src="https://www.youtube.com/embed/?listType=search&list=#{name}&autoplay=1&enablejsapi=1"
                   frameborder="0"
                   allowfullscreen)

    .section-info
      //- Check if solo artist or band (normalise type first)
      -var ntype = (type || '').toLowerCase();
      h1(class=ntype)= name
        if type
          i(class="fa fa-#{ntype === 'person' ? 'user' : 'users'}"
            title="#{ntype === 'person' ? 'Artist' : 'Band'}")
      //- Country of origin
      if area
        p
          if area.iso_3166_1_codes && area.iso_3166_1_codes.length
            img(src='/images/flags/#{area.iso_3166_1_codes}.png')
          = area.name

      .tags
        ul
          each tag in tags
            li(class='label')= tag.name

      p.bio!= bio.summary

      .links
        if relations
          ul
            each link in relations
              li
                case link.type
                  when 'oficial homepage'
                    a(class='oficial' href=link.url.resource) Official page
                  when 'wikipedia'
                    a(class='wikipedia' href=link.url.resource) Wikipedia
                  when 'discogs'
                    a(class='discogs' href=link.url.resource) Discogs
                  when 'last.fm'
                    a(class='lastfm' href=link.url.resource) Last.fm
                  when 'soundcloud'
                    a(class='soundcloud' href=link.url.resource) SoundCloud
                  when 'youtube'
                    a(class='youtube' href=link.url.resource) YouTube
                  when 'social network'
                    if link.url.resource.indexOf('twitter.com') > -1
                      a(class='twitter' href=link.url.resource) Twitter
                    else if link.url.resource.indexOf('facebook.com') > -1
                      a(class='facebook' href=link.url.resource) Facebook
                    else
                      a(class='generic hidden' href=link.url.resource) #{link.type}
                  default
                    a(class='generic hidden' href=link.url.resource) #{link.type}






block scripts
  script(src='/javascripts/soundcloud-widget.js')
  script.
    var soundcloud = '#{play.soundcloud}';
    var vimeo      = '#{play.vimeo}';
    var myspace    = '#{play.myspace}';
    var youtube    = '#{play.youtube}';

    // SoundCloud player
    if (soundcloud) {
      var iframe = document.querySelector('#iframe-soundcloud');
      var widget = SC.Widget(iframe);
      widget.load(soundcloud, {
        'auto_play': 1
      });
    }

    // YouTube player
    // TODO Only search if there is no official channel
    //- if (youtube) {

    //- } else {
    //-   // Load the IFrame Player API code asynchronously.
    //-   var tag = document.createElement('script');
    //-   tag.src = "http://www.youtube.com/player_api";
    //-   var firstScriptTag = document.getElementsByTagName('script')[0];
    //-   firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    //-   // Replace the 'ytplayer' element with an <iframe> and
    //-   // YouTube player after the API code downloads.
    //-   var player;
    //-   function onYouTubePlayerAPIReady() {
    //-     player = new YT.Player('ytplayer', {
    //-       height: '390',
    //-       width: '640',
    //-       autoplay: true,
    //-       listType: 'search',
    //-       list: 'xxyyxx'
    //-     });
    //-   }
    //- }
