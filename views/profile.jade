extends layout

block header
  include ./includes/header.jade

block content
  .profile
    .section-media
      img(class='cover' src=image)

      .players
        ul(class='tabs')
          //- Show our preferred media players, only 1 active at a time
          each player in play
            if player
              li(class='#{player}')
                a(href='#' class='tab-#{player} fa fa-#{player}')
          //- Loads YouTube search if doesn't have a YouTube channel
          if !play[2]
            li(class='youtube-search')
              a(href='#' class='tab-youtube fa fa-youtube-play')
        .tab-content
          if play[0]
            .soundcloud
              iframe(id='iframe-soundcloud'
                     src='//w.soundcloud.com/player/?url=http://api.soundcloud.com')

          //- No YouTube channel? Load YouTube search;
          //- Otherwise, load player with YouTube channel
          if !play[2]
            div(id='ytplayer' class='youtube video-container')
              iframe(id="ytplayer"
                     type="text/html"
                     width="720"
                     height="405"
                     src="https://www.youtube.com/embed/?listType=search&list=#{name}&autoplay=&enablejsapi=1"
                     frameborder="0"
                     allowfullscreen)
          else
            div(id='ytplayer' class='youtube video-container')
              iframe(id="ytplayer"
                     type="text/html"
                     width="720"
                     height="405"
                     src="https://www.youtube.com/embed/?listType=user_uploads&list=#{play_urls[2]}&autoplay=1&enablejsapi=1"
                     frameborder="0"
                     allowfullscreen)


    //- Info section: Name, country, genres, bio...
    .section-info
      //- Check if solo artist or band (normalise type first)
      -var ntype = (type || '').toLowerCase();
      h2(class="#{ntype}")= name
        if type
          i(class="fa fa-#{ntype === 'person' ? 'user' : 'users'}"
            title="#{ntype === 'person' ? 'Artist' : 'Band'}")
      //- Country of origin
      if area
        p.origin
          if area.iso_3166_1_codes && area.iso_3166_1_codes.length
            img(src='/images/flags/#{area.iso_3166_1_codes}.png')
          = area.name
      //- Tags/genres
      if tags && tags.length
        .tags
          ul
            each tag in tags
              li(class='label')= tag.name
      //- Biography
      p.bio!= bio.summary

      .links
        if relations
          ul
            each link in relations
              li
                - var linksHref = link.url.resource
                case link.type
                  when 'oficial homepage'
                    - var linksClasses = 'official'
                    - var linksType = 'Official page'
                    - var linksIcon = 'external-link'
                  when 'wikipedia'
                    - var linksClasses = 'wikipedia'
                    - var linksType = 'Wikipedia'
                    - var linksIcon = 'external-link'
                  when 'discogs'
                    - var linksClasses = 'discogs'
                    - var linksType = 'Discogs'
                    - var linksIcon = 'external-link'
                  when 'last.fm'
                    - var linksClasses = 'lastfm'
                    - var linksType = 'Last.fm'
                    - var linksIcon = linksClasses
                  when 'soundcloud'
                    - var linksClasses = 'soundcloud'
                    - var linksType = 'SoundCloud'
                    - var linksIcon = linksClasses
                  when 'youtube'
                    - var linksClasses = 'youtube'
                    - var linksType = 'YouTube'
                    - var linksIcon = linksClasses
                  when 'social network'
                    if link.url.resource.indexOf('twitter.com') > -1
                      - var linksClasses = 'twitter'
                      - var linksType = 'Twitter'
                      - var linksIcon = linksClasses
                    else if link.url.resource.indexOf('facebook.com') > -1
                      - var linksClasses = 'facebook'
                      - var linksType = 'Facebook'
                      - var linksIcon = linksClasses
                    else
                      - var linksClasses = 'generic hidden'
                      - var linksType = link.type
                      - var linksIcon = 'external-link'
                  default
                    - var linksClasses = 'generic hidden'
                    - var linksType = link.type
                    - var linksIcon = 'external-link'
                a(class='#{linksClasses}' href=linksHref)
                  i(class='fa fa-#{linksIcon}')
                  | #{linksType}

block scripts
  script(src='/javascripts/zepto.min.js')
  script(src='/javascripts/soundcloud-widget.js')
  script.
    var soundcloud = '#{play_urls[0]}';
    var vimeo      = '#{play_urls[1]}';
    var youtube    = '#{play_urls[2]}';

    // SoundCloud player
    if (soundcloud) {
      var iframe = document.querySelector('#iframe-soundcloud');
      var widget = SC.Widget(iframe);
      widget.load(soundcloud, {
        'auto_play': 0  // autoplay
      });
    }

    // Load the first player
    $('.tabs li').first().addClass('active');
    $('.tab-content > div').first().addClass('active');

    // Set up tab interation
    $('.tabs li').on('click', function () {
      var turnOn = 'active';
      var turnOnEl = '.' + turnOn;

      var index = $(this).index() + 1;
      if (index > 0) {
        // Activate the right tab
        $('.tabs').find(turnOnEl).removeClass(turnOn);
        $(this).addClass(turnOn);
        // Activate the right tab content
        $('.tab-content').find(turnOnEl).removeClass(turnOn);
        $('.tab-content > div:nth-child(' + index + ')').addClass(turnOn);
      }
    });

    // YouTube player
    // TODO Only search if there is no official channel
    //- if (youtube) {

    //- } else {
    //-   // Load the IFrame Player API code asynchronously.
    //-   var tag = document.createElement('script');
    //-   tag.src = "http://www.youtube.com/player_api";
    //-   var firstScriptTag = document.getElementsByTagName('script')[0];
    //-   firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    //-   // Replace the 'ytplayer' element with an <iframe> and
    //-   // YouTube player after the API code downloads.
    //-   var player;
    //-   function onYouTubePlayerAPIReady() {
    //-     player = new YT.Player('ytplayer', {
    //-       height: '390',
    //-       width: '640',
    //-       autoplay: true,
    //-       listType: 'search',
    //-       list: 'xxyyxx'
    //-     });
    //-   }
    //- }
